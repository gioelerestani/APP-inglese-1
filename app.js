
if('serviceWorker' in navigator){window.addEventListener('load',()=>navigator.serviceWorker.register('./service-worker.js'));}
const state={xp:+(localStorage.getItem('xp')||0),streak:+(localStorage.getItem('streak')||0),lastActive:localStorage.getItem('lastActive')||null,lang:localStorage.getItem('lang')||'it',progress:JSON.parse(localStorage.getItem('progress')||'{}')};
const dict={it:{home:"Home",quickPractice:"Pratica",units:"UnitÃ ",profile:"Profilo",start:"Avvia",continue:"Continua",resume:"Riprendi",unit:"UnitÃ ",lesson:"Lezione",correct:"Corretto!",wrong:"Sbagliato",next:"Avanti",check:"Conferma",listen:"Ascolta",tapToListen:"Tocca per ascoltare",completed:"Completato",of:"di",yourProgress:"I tuoi progressi",quick5:"Pratica veloce (5)",chooseUnit:"Scegli un'unitÃ ",streakToday:"Streak aggiornata!",goodJob:"Ottimo lavoro!",installedHint:"Suggerimento: Aggiungi alla Home per usarla come app"},en:{home:"Home",quickPractice:"Practice",units:"Units",profile:"Profile",start:"Start",continue:"Continue",resume:"Resume",unit:"Unit",lesson:"Lesson",correct:"Correct!",wrong:"Wrong",next:"Next",check:"Check",listen:"Listen",tapToListen:"Tap to listen",completed:"Completed",of:"of",yourProgress:"Your progress",quick5:"Quick practice (5)",chooseUnit:"Choose a unit",streakToday:"Streak updated!",goodJob:"Great job!",installedHint:"Tip: Add to Home to use it as an app"}};
function t(k){return dict[state.lang][k]||k}const $=(s,e=document)=>e.querySelector(s);const view=$('#view');const toast=$('#toast');const xpBadge=$('#xpBadge');const streakBadge=$('#streakBadge');const langSwitch=$('#langSwitch');
function setBadges(){xpBadge.textContent=`XP ${state.xp}`;streakBadge.textContent=`ðŸ”¥ ${state.streak}`}
function showToast(m){toast.textContent=m;toast.classList.add('show');setTimeout(()=>toast.classList.remove('show'),1800)}
langSwitch.value=state.lang;langSwitch.addEventListener('change',()=>{state.lang=langSwitch.value;localStorage.setItem('lang',state.lang);render(location.hash)});
document.querySelectorAll('[data-nav]').forEach(b=>b.addEventListener('click',()=>location.hash=b.dataset.nav));
window.addEventListener('hashchange',()=>render(location.hash));if(!location.hash)location.hash='home';
(function(){const today=new Date().toDateString();if(state.lastActive!==today){const y=new Date(Date.now()-86400000).toDateString();state.streak=state.lastActive===y?state.streak+1:1;state.lastActive=today;localStorage.setItem('streak',state.streak);localStorage.setItem('lastActive',state.lastActive);setTimeout(()=>showToast(t('streakToday')),800)}})();
let EX=null;fetch('./data/exercises.json').then(r=>r.json()).then(j=>{EX=j;render(location.hash)});
function unitProgress(id){const p=state.progress[id]||{completed:0,total:EX.units.find(u=>u.id===id)?.total||0};return p}
function addProgress(id){const p=unitProgress(id);p.completed=Math.min(p.completed+1,p.total);state.progress[id]=p;localStorage.setItem('progress',JSON.stringify(state.progress))}
function Home(){return `<h1 class="title">English Mastery</h1><p class="subtitle">${t('yourProgress')}</p><div class="grid">${EX.units.slice(0,6).map(UnitCard).join('')}<div class="card"><h3>âš¡ ${t('quick5')}</h3><p>${t('quickPractice')}</p><div class="progress"><span style="width:0%"></span></div><div style="margin-top:10px"><button class="btn" data-action="quick">${t('start')}</button></div></div></div><p class="small" style="margin-top:10px">${t('installedHint')}</p>`}
function UnitCard(u){const p=unitProgress(u.id);const pct=u.total?Math.round((p.completed/u.total)*100):0;return `<div class="card" data-unit="${u.id}"><h3>${u.emoji} ${u.title}</h3><p>${t('unit')} â€¢ ${p.completed}/${u.total} ${t('completed')}</p><div class="progress"><span style="width:${pct}%"></span></div><div style="margin-top:10px"><button class="btn" data-open="${u.id}">${p.completed?t('continue'):t('start')}</button></div></div>`}
function Units(){return `<h2 class="title">ðŸ“š ${t('units')}</h2><p class="subtitle">${t('chooseUnit')}</p><div class="grid">${EX.units.map(UnitCard).join('')}</div>`}
function Profile(){return `<h2 class="title">ðŸ‘¤ ${t('profile')}</h2><div class="grid"><div class="card"><h3>XP</h3><p>${state.xp}</p></div><div class="card"><h3>Streak</h3><p>${state.streak}</p></div><div class="card"><h3>Units</h3><p>${Object.keys(state.progress).length}</p></div><div class="card"><h3>Lang</h3><p>${state.lang.toUpperCase()}</p></div></div>`}
function Practice(unitId,amount=Infinity){const all=unitId?EX.exercises.filter(e=>e.unitId===unitId):EX.exercises;const session=all.slice(0).sort(()=>Math.random()-0.5).slice(0,Math.min(amount,all.length));let i=0,score=0;
 function renderQ(){const e=session[i];const pct=Math.round(((i)/session.length)*100);view.innerHTML=`<div class="card"><h3>${EX.units.find(u=>u.id===e.unitId).emoji} ${EX.units.find(u=>u.id===e.unitId).title}</h3><div class="progress"><span style="width:${pct}%"></span></div></div><div class="exercise" data-type="${e.type}">${ExerciseView(e)}</div><div style="display:flex;gap:8px;justify-content:flex-end"><button class="btn" id="checkBtn">${t('check')}</button></div>`;bindExerciseHandlers(e);$('#checkBtn').addEventListener('click',()=>checkAnswer(e))}
 function correct(){state.xp+=10;localStorage.setItem('xp',state.xp);setBadges();showToast(`+10 XP â€¢ ${t('correct')}`);score++}
 function wrong(){showToast(t('wrong'))}
 function checkAnswer(e){let ok=false;if(e.type==='mcq'){const sel=$('.choice.selected');if(!sel) return;ok=sel.dataset.val===e.answer;sel.classList.add(ok?'correct':'wrong')}else if(e.type==='cloze'){ok=$('#clozeInput').value.trim().toLowerCase()===e.answer.toLowerCase();$('#clozeInput').style.outline=`2px solid ${ok?'#15c27a':'#ff5a6b'}`}else if(e.type==='order'){const chosen=Array.from($('#bank').children).map(n=>n.textContent).join(' ');ok=chosen.trim().toLowerCase()===e.answer.toLowerCase();$('#bank').style.outline=`2px solid ${ok?'#15c27a':'#ff5a6b'}`}else if(e.type==='audio'){ok=$('.choice.selected')&&$('.choice.selected').dataset.val===e.answer;if($('.choice.selected'))$('.choice.selected').classList.add(ok?'correct':'wrong')}else if(e.type==='translate'){ok=$('#trInput').value.trim().toLowerCase()===e.answer.toLowerCase();$('#trInput').style.outline=`2px solid ${ok?'#15c27a':'#ff5a6b'}`}
  if(ok){correct();addProgress(e.unitId)}else{wrong()}
  setTimeout(()=>{i++;if(i<session.length){renderQ()}else{const pctDone=Math.round((score/session.length)*100);view.innerHTML=`<div class="card"><h2 class="title">${t('completed')}</h2><p class="subtitle">${score}/${session.length} â€¢ ${pctDone}%</p><button class="btn" data-nav="home">${t('next')}</button></div>`}},650)}
 renderQ()}
function ExerciseView(e){if(e.type==='mcq'){return `<h3>${e.prompt}</h3><div class="choices">${e.choices.map(c=>`<div class="choice" data-val="${c}">${c}</div>`).join('')}</div>`}
 if(e.type==='cloze'){return `<h3>${e.prompt}</h3><input id="clozeInput" placeholder="..." class="token" style="width:100%">`}
 if(e.type==='order'){return `<h3>${e.prompt}</h3><div class="wordbank" id="bank">${e.bank.map(w=>`<span class="token" data-token>${w}</span>`).join('')}</div>`}
 if(e.type==='audio'){return `<h3>${e.prompt}</h3><button class="audio-btn" id="playBtn">ðŸ”Š ${t('listen')}</button><p class="small">${t('tapToListen')}</p><div class="choices">${e.choices.map(c=>`<div class="choice" data-val="${c}">${c}</div>`).join('')}</div>`}
 if(e.type==='translate'){return `<h3>${e.prompt}</h3><input id="trInput" placeholder="..." class="token" style="width:100%">`}return `<p>Unknown</p>`}
function bindExerciseHandlers(e){if(e.type==='mcq'||e.type==='audio'){document.querySelectorAll('.choice').forEach(ch=>{ch.addEventListener('click',()=>{document.querySelectorAll('.choice').forEach(c=>c.classList.remove('selected'));ch.classList.add('selected')})})}
 if(e.type==='order'){$('#bank').addEventListener('click',ev=>{const el=ev.target.closest('[data-token]');if(!el)return;el.parentElement.appendChild(el)})}
 if(e.type==='audio'){$('#playBtn').addEventListener('click',()=>{const u=new SpeechSynthesisUtterance(e.tts||e.answer);const vs=speechSynthesis.getVoices();const en=vs.find(v=>v.lang.startsWith('en'));if(en)u.voice=en;u.rate=.95;speechSynthesis.speak(u)})}}
function render(hash){if(!EX){view.innerHTML='<p>Loadingâ€¦</p>';return}setBadges();const h=(hash||'').replace('#','');if(h==='home'){view.innerHTML=Home()}else if(h==='units'){view.innerHTML=Units()}else if(h==='practice'){Practice(null,5);return}else if(h==='profile'){view.innerHTML=Profile()}else{view.innerHTML=Home()}
 document.querySelectorAll('[data-open]').forEach(btn=>btn.addEventListener('click',()=>Practice(btn.dataset.open)));const quick=document.querySelector('[data-action="quick"]');if(quick)quick.addEventListener('click',()=>Practice(null,5))}
render(location.hash);
